
name: Build and Publish image
run-name: ${{ github.actor }} is publishing a new Docker image 🚀

# Event that trigger workflow
on:
  push:
    branches:
      - main
  # to run a workflow manually, configure your workflow to run on workflow_dispatch in the default branch

jobs: 
  publish_images:
    runs-on: ubuntu-latest
    steps:
    - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
    - name: Check out repository code
      uses: actions/checkout@v4
    - run: |
        echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
        echo "🖥️ The workflow is now ready to test your code on the runner."
    - name: Build image
      run: |
        docker build . -t ${{ github.repository }}:latest
        echo "🎉 Successfully built: ${{ github.repository }}:latest."
    - name: Push image to docker hub
      run: |
        docker login -u ${{ secrets.DH_USERNAME }} -p ${{ secrets.DH_GH }} 
        docker tag {{ github.repository }}:latest ${{ secrets.DH_USERNAME }}/${{ github.event.repository.name }}:latest
        docker push ${{ secrets.DH_USERNAME }}/${{ github.event.repository.name }}:latest
        echo "🎉 The Docker image was pushed to docker hub."
      # login Dockerhub
    - run: echo "🍏 This job's status is ${{ job.status }}."
    
# ${{ GITHUB_ACTOR }} represents the name of the user who initiated the workflow run. 
# ${{ github.repository }} refers to the name of the repository in the format owner/repository-name
# all environment variables, secrets are sase-insensitive.
# Note: Because my Github username is different from my DockerHub username so I need to run docker tag step.    